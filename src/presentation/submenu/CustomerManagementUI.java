package presentation.submenu;

import bussiness.service.customer.CustomerServiceImpl;
import entity.Customer;
import entity.Product;
import presentation.IGenericUI;
import presentation.MainMenuAfterLogin;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class CustomerManagementUI implements IGenericUI {
    private final CustomerServiceImpl customerServiceImpl;

    public CustomerManagementUI() {
        customerServiceImpl = CustomerServiceImpl.getInstance();
    }

    @Override
    public void showMenu() {
        System.out.println("========== QU·∫¢N L√ç KH√ÅCH H√ÄNG ==========");
        System.out.println("1. Hi·ªÉn th·ªã danh s√°ch kh√°ch h√†ng");
        System.out.println("2. Th√™m kh√°ch h√†ng moi");
        System.out.println("3. C·∫≠p nhat th√¥ng tin kh√°ch h√†ng");
        System.out.println("4. X√≥a kh√°ch h√†ng theo ID");
        System.out.println("5. Quay l·∫°i menu ch√≠nh");
        System.out.println("=========================================");
    }

    public void runCustomerUI() {
        Scanner sc = new Scanner(System.in);
        while (true) {
            showMenu();
            System.out.print("Nh·∫≠p l·ª±a ch·ªçn: ");
            byte choice = Byte.parseByte(sc.nextLine());

            switch (choice) {
                case 1:
                    getAllCustomerInPresentation();
                    break;
                case 2:
                    addMultipleInPresentation(sc);
                    break;
                case 3:
                    updateCustomerInPresentation(sc);
                    break;
                case 4:
                    deleteCustomerInPresentation(sc);
                    break;
                case 5:
                    MainMenuAfterLogin.runMainMenu();
                    break;
                default:
                    System.out.println("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p l·∫°i");
                    break;
            }
        }
    }

    private void addMultipleInPresentation(Scanner sc) {
        System.out.print("‚ùîNh·∫≠p s·ªë l∆∞·ª£ng kh√°ch h√†ng b·∫°n mu·ªën th√™m: ");
        int count = Integer.parseInt(sc.nextLine());

        List<Customer> customers = new ArrayList<>();

        for (int i = 0; i < count; i++) {
            Customer customer = new Customer();
            System.out.println("üëå Nh·∫≠p th√¥ng tin kh√°ch h√†ng th·ª© " + (i + 1));
            System.out.print("üòä Nh·∫≠p t√™n kh√°ch h√†ng: ");
            customer.setName(sc.nextLine());
            System.out.print("üòã Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i ");
            customer.setPhone(sc.nextLine());
            System.out.print("üòó Nh·∫≠p email: ");
            customer.setEmail(sc.nextLine());
            System.out.print("ü§î Nh·∫≠p ƒë·ªãa ch·ªâ: ");
            customer.setAddress(sc.nextLine());
            customers.add(customer);
            System.out.println();
        }

        customerServiceImpl.addMultiple(customers);
    }

    private void getAllCustomerInPresentation() {
        List<Customer> customers = customerServiceImpl.getAll();

        if (customers.isEmpty()) {
            System.out.println("üò≠ Danh s√°ch kh√°ch h√†ng hi·ªán ƒëang tr·ªëng.");
            return;
        }
        System.out.println("========== Danh S√°ch S·∫£n Ph·∫©m ==========");
        for (Customer customer : customers) {
            System.out.println("ID: " + customer.getId() + ", Name: " + customer.getName() +
                    ", Phone: " + customer.getPhone() + ", Email: " + customer.getEmail() +
                    ", Address: " + customer.getAddress());
        }
        System.out.println("========================================");
    }

    private void updateCustomerInPresentation(Scanner sc) {
        System.out.print("Nh·∫≠p id c·ªßa kh√°ch h√†ng mu·ªën s·ª≠a: ");
        int id = Integer.parseInt(sc.nextLine());

        Customer customer = customerServiceImpl.getById(id);
        if (customer == null) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng c√≥ id = " + id);
            return;
        }

        while (true) {
            System.out.println("C√°c th√¥ng tin c√≥ th·ªÉ ch·ªânh s·ª≠a: ");
            System.out.println("1ü•ó T√™n kh√°ch h√†ng");
            System.out.println("2üçó S·ªë ƒëi·ªán tho·∫°i");
            System.out.println("3üçú Email");
            System.out.println("4üç∂ ƒê·ªãa ch·ªâ");
            System.out.println("5üòé ƒê√£ xong, tho√°t");
            System.out.println("......................");
            System.out.print("„ÉΩÔºà‚âß‚ñ°‚â¶Ôºâ„Éé B·∫°n chon c√°i n√†o: ");
            byte choice = Byte.parseByte(sc.nextLine());

            switch (choice) {
                case 1:
                    System.out.print("Nh·∫≠p t√™n m·ªõi cho s·∫£n ph·∫©m n√†y: ");
                    customer.setName(sc.nextLine());
                    break;
                case 2:
                    System.out.print("Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i m·ªõi cho kh√°ch h√†ng n√†y: ");
                    customer.setPhone(sc.nextLine());
                    break;
                case 3:
                    System.out.print("Nh·∫≠p email m·ªõi cho kh√°ch h√†ng n√†y: ");
                    customer.setEmail(sc.nextLine());
                    break;
                case 4:
                    System.out.print("Nh·∫≠p s·ªë ƒë·ªãa ch·ªâ m·ªõi cho kh√°ch h√†ng n√†y: ");
                    customer.setAddress(sc.nextLine());
                    break;
                case 5:
                    System.out.println("üéâ ƒê√£ ho√†n th√†nh vi·ªác ch·ªânh s·ª≠a kh√°ch h√†ng!");
                    customerServiceImpl.update(customer);
                    return;
                default:
                    System.out.println("B·∫•m l·ªôn r·ªìi b·∫°n √™yyyyy, ch·ªçn l·∫°i ƒëi nh√≥e ^^");
                    break;
            }
        }
    }

    private void deleteCustomerInPresentation (Scanner sc) {
        System.out.print("Nh·∫≠p id c·ªßa s·∫£n ph·∫©m mu·ªën x√≥a: ");
        int id = Integer.parseInt(sc.nextLine());

        Customer customer = customerServiceImpl.getById(id);
        if (customer == null) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng c√≥ id = " + id);
            return;
        }
        System.out.print("üîÜ C√≥ kh√°ch h√†ng trong danh s√°ch, b·∫°n c√≥ mu·ªën x√≥a kh√¥ng (c√≥ = 'y', kh√¥ng = 'n'): ");
        String answer = sc.nextLine();

        if (answer.equals("y")) {
            customerServiceImpl.deleteById(id);
            System.out.println("‚úÖ ƒê√£ x√≥a kh√°ch h√†ng c√≥ id = " + id);
        } else if (answer.equals("n")) {
            System.out.println("‚ùé ƒê√£ h·ªßy thao t√°c xoa ƒë·ªëi v·ªõi kh√°ch h√†ng c√≥ id = "+id);
        } else {
            System.out.println("üò≠L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá, vui l√≤ng th·ª±c hi·ªán l·∫°i thao t√°c t·ª´ ƒë·∫ßu.");
        }
    }
}

package presentation.submenu;

import bussiness.service.revenue.RevenueServiceImp;
import presentation.IGenericUI;
import presentation.MainMenuAfterLogin;
import static utils.PrintUtils.*;
import static validate.InvoiceValidator.*;
import static validate.RevenueValidator.*;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Scanner;

public class RevenueStatisticsUI implements IGenericUI {
    private final RevenueServiceImp revenueServiceImp;

    public RevenueStatisticsUI() {
        revenueServiceImp = RevenueServiceImp.getInstance();
    }
    @Override
    public void showMenu() {
        System.out.println(WHITE_BOLD_BRIGHT +"========== TH·ªêNG K√ä DOANH THU ==========");
        System.out.println("1. Doanh thu theo ng√†y");
        System.out.println("2. Doanh thu theo th√°ng");
        System.out.println("3. Doanh thu theo nƒÉm");
        System.out.println("4. Quay l·∫°i menu ch√≠nh" + RESET);
    }

    public void runRevenueStatisticsUI() {
        Scanner sc = new Scanner(System.in);
        while (true) {
            showMenu();
            System.out.print(YELLOW_BOLD_BRIGHT + "‚ùî Nh·∫≠p l·ª±a ch·ªçn: " + RESET);
            byte choice = Byte.parseByte(sc.nextLine());

            switch (choice) {
                case 1:
                    getTotalByDateInPresentation(sc);
                    break;
                case 2:
                    getTotalByMonthInPresentation(sc);
                    break;
                case 3:
                    getTotalByYearInPresentation(sc);
                    break;
                case 4:
                    MainMenuAfterLogin.runMainMenu();
                    break;
                default:
                    System.out.println(RED_BOLD_BRIGHT + "üÜò L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p l·∫°i" + RESET);
                    break;
            }
        }
    }


    private void getTotalByDateInPresentation(Scanner sc) {
        LocalDate date = null;
        while (date == null) {
            System.out.print(YELLOW_BOLD_BRIGHT + "‚ùî Nh·∫≠p v√†o ng√†y th√°ng nƒÉm ƒë·∫ßy ƒë·ªß nha: " + RESET);
            String dateInput = sc.nextLine();
            date = validateDateInput(dateInput);
        }

        BigDecimal totalRevenue = revenueServiceImp.getTotalRevenueByDate(date);

        if (totalRevenue.compareTo(BigDecimal.ZERO) == 0) {
            System.out.println(RED_BOLD + "‚ùå Kh√¥ng c√≥ doanh thu trong ng√†y n√†y ho·∫∑c ng√†y kh√¥ng h·ª£p l·ªá."+ RESET);
        } else {
            System.out.printf(BLUE_BOLD_BRIGHT + "T·ªïng doanh thu ng√†y %s l√†: %,.2f VNƒê\n", date, totalRevenue + RESET);
        }

    }

    private void getTotalByMonthInPresentation (Scanner sc) {
        String monthInput = validateMonthInput(sc, YELLOW_BOLD_BRIGHT + "‚ùî Nh·∫≠p th√°ng c·∫ßn tra c·ª©u: ");
        int month = Integer.parseInt(monthInput);
        int year = validateIntInput(sc, "‚ùî Nh·∫≠p nƒÉm c·∫ßn tra c·ª©u: "+RESET);

        BigDecimal totalVenue = revenueServiceImp.getTotalRevenueByMonth(month, year);

        System.out.printf(BLUE_BOLD_BRIGHT + "T·ªïng doanh thu c·ªßa th√°ng %s/%d l√† %,.2f VNƒê", monthInput, year, totalVenue + RESET);
    }


    private void getTotalByYearInPresentation (Scanner sc) {
        System.out.print(YELLOW_BACKGROUND +"‚ùîNh·∫≠p nƒÉm c·∫ßn tra c·ª©u: " + RESET);
        String yearInput = sc.nextLine();
        int year = Integer.parseInt(yearInput);

        BigDecimal totalVenue = revenueServiceImp.getTotalRevenueByYear(year);

        System.out.printf(BLUE_BOLD_BRIGHT + "T·ªïng doanh thu c·ªßa nƒÉm %s l√† %,.2f VNƒê", yearInput, totalVenue + RESET);
    }
}

